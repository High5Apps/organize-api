#!/bin/bash

set -eE
trap cleanup ERR

cleanup()
{
  # Stop and remove the local registry
  docker container stop registry
  echo '- Stopped'
  docker container rm registry
  echo '- Removed'
}

if [ "$#" -ne 1 ]; then
  echo "Error: Must include ssh target as first arg"
  exit 1
fi

if ! grep -q "Host $1" ~/.ssh/config; then
    echo "Error: First argument must be an ssh target configured in ~/.ssh/config"
    exit 1
fi

# Start a local registry
# 5001 because 5000 is already used by MacOS/ControlCenter on Macs
docker run --detach --name registry -p 5001:5000 registry:2

# Build and push the image to the local registry
docker compose build

# Push default services and services with the runManually profile
docker compose --profile runManually push

# Transfer compose file into the home directory of the ssh target
echo 'Transferring compose file'
scp compose.yaml $1:

# Transfer .env file
echo 'Transferring .env file'
scp .env $1:

# Connect ssh target to local registry and pull project
ssh -R 5001:localhost:5001 $1  << EOF
  set -e

  echo 'Stopping existing containers (if needed)...'
  docker compose down

  echo 'Pulling latest images...'

  # Pull default services and services with the runManually profile
  docker compose --profile runManually pull

  echo 'Starting containers...'

  # Only start default services
  docker compose up --detach

  echo 'Setting up database...'

  # For some reason, if these aren't &&-chained together, execution stops after
  # rake db:create despite having an exit code of 0
  docker compose exec app rake db:create \
   && docker compose exec app rake db:migrate
EOF

cleanup
